; Sample supervisor config file for daemonizing the twitter search to mongodb software

[inet_http_server]          ; inet (TCP) server disabled by default
port=127.0.0.1:9001         ; (ip_address:port specifier, *:port for all iface)
username=admin      ; (default is no username (open server))
password=pass ; (default is no password (open server))

[supervisord]
stopsignal=INT
logfile=supervisord.log      ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10           ; (num of main logfile rotation backups;default 10)
loglevel=info                ; (log level;default info; others: debug,warn,trace)
pidfile=supervisord.pid      ; (supervisord pidfile;default supervisord.pid)
nodaemon=false               ; (start in foreground if true;default false)
minfds=1024                  ; (min. avail startup file descriptors;default 1024)
minprocs=200                 ; (min. avail process descriptors;default 200)

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket
username=admin       ; should be same as http_username if set
password=pass  ; should be same as http_password if set

[program:apache_zookeeper]
command=/var/opt/kafka/bin/zookeeper-server-start.sh /var/opt/kafka/config/zookeeper.properties
stdout_logfile=logs/zookeeper_out.log
stderr_logfile=logs/zookeeper_err.log
autostart=true
autorestart=true
startsecs=10
stopwaitsecs=10

[program:apache_kafka_server]
command=/var/opt/kafka/bin/kafka-server-start.sh /var/opt/kafka/config/server.properties
stdout_logfile=logs/kafka_out.log
stderr_logfile=logs/kafka_err.log
autostart=true
autorestart=true
startsecs=10
stopwaitsecs=10

[program:capture]
command=python twitter_capture.py tskafka
stdout_logfile=logs/twitter_capture_out.log
stderr_logfile=logs/twitter_capture_err.log
autostart=true
autorestart=true
startsecs=10
stopwaitsecs=10

[program:bt_server]
command=python runserver.py
stdout_logfile=logs/bt_server_out.log
stderr_logfile=logs/bt_server_err.log
autostart=true
autorestart=true
startsecs=10
stopwaitsecs=10

